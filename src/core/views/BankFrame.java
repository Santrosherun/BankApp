/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.controllers.AccountController;
import core.controllers.DepositController;
import core.controllers.UserController;
import core.controllers.utils.Response;
import core.models.Account;
import core.models.Transaction;
import core.models.utils.TransactionType;
import core.models.User;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class BankFrame extends javax.swing.JFrame {
    
    /**
     * Creates new form BankFrame
     */
    public BankFrame() {
        initComponents();    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        registerUserPanel = new javax.swing.JPanel();
        registerLabel = new javax.swing.JLabel();
        registerIdLabel = new javax.swing.JLabel();
        registerFirstNameLabel = new javax.swing.JLabel();
        registerLastNameLabel = new javax.swing.JLabel();
        registerAgeLabel = new javax.swing.JLabel();
        registerIdTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        ageTextField = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        createAccountPanel = new javax.swing.JPanel();
        createAccountLabel = new javax.swing.JLabel();
        createIdLabel = new javax.swing.JLabel();
        initialBalanceLabel = new javax.swing.JLabel();
        createAccountIdTextField = new javax.swing.JTextField();
        initialBalanceTextField = new javax.swing.JTextField();
        createButton = new javax.swing.JButton();
        makeTransactionPanel = new javax.swing.JPanel();
        makeTransactionLabel = new javax.swing.JLabel();
        transactionTypeLabel = new javax.swing.JLabel();
        sourceAccountLabel = new javax.swing.JLabel();
        destinationAccountLabel = new javax.swing.JLabel();
        amountLabel = new javax.swing.JLabel();
        sourceAccountTextField = new javax.swing.JTextField();
        destinationAccountTextField = new javax.swing.JTextField();
        amountTextField = new javax.swing.JTextField();
        depositComboBox = new javax.swing.JComboBox<>();
        executeButton = new javax.swing.JButton();
        userListPanel = new javax.swing.JPanel();
        listUsersLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listUserTable = new javax.swing.JTable();
        usersRefreshButton = new javax.swing.JButton();
        listAccountsPanel = new javax.swing.JPanel();
        listAccountsLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        AccountsTable = new javax.swing.JTable();
        accountsRefreshButton = new javax.swing.JButton();
        transcationsPanel = new javax.swing.JPanel();
        listTransactionsLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transcationsTable = new javax.swing.JTable();
        transactionsRefreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        registerLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        registerLabel.setText("Register User");

        registerIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerIdLabel.setText("ID");

        registerFirstNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerFirstNameLabel.setText("Firstname");

        registerLastNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerLastNameLabel.setText("Lastname");

        registerAgeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerAgeLabel.setText("Age");

        registerIdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerIdTextFieldActionPerformed(evt);
            }
        });

        registerButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerUserPanelLayout = new javax.swing.GroupLayout(registerUserPanel);
        registerUserPanel.setLayout(registerUserPanelLayout);
        registerUserPanelLayout.setHorizontalGroup(
            registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerUserPanelLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(registerLabel)
                        .addGap(0, 270, Short.MAX_VALUE))
                    .addGroup(registerUserPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registerFirstNameLabel)
                            .addComponent(registerLastNameLabel)
                            .addComponent(registerAgeLabel)
                            .addComponent(registerIdLabel))
                        .addGap(18, 18, 18)
                        .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registerIdTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ageTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(firstNameTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(registerButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        registerUserPanelLayout.setVerticalGroup(
            registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(registerLabel)
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerIdLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerFirstNameLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerLastNameLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerAgeLabel))
                .addGap(18, 18, 18)
                .addComponent(registerButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Register User", registerUserPanel);

        createAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        createAccountLabel.setText("Create Account");

        createIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        createIdLabel.setText("User ID");

        initialBalanceLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        initialBalanceLabel.setText("Initial Balance");

        createButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createAccountPanelLayout = new javax.swing.GroupLayout(createAccountPanel);
        createAccountPanel.setLayout(createAccountPanelLayout);
        createAccountPanelLayout.setHorizontalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(createAccountLabel))
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createIdLabel)
                            .addComponent(initialBalanceLabel))
                        .addGap(18, 18, 18)
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(initialBalanceTextField)
                            .addComponent(createAccountIdTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(createButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        createAccountPanelLayout.setVerticalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(createAccountLabel)
                .addGap(18, 18, 18)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createAccountIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createIdLabel))
                .addGap(18, 18, 18)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initialBalanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initialBalanceLabel))
                .addGap(18, 18, 18)
                .addComponent(createButton)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create Account", createAccountPanel);

        makeTransactionLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        makeTransactionLabel.setText("Make Transaction");

        transactionTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        transactionTypeLabel.setText("Type");

        sourceAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sourceAccountLabel.setText("Source Account");

        destinationAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        destinationAccountLabel.setText("Destination Account");

        amountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        amountLabel.setText("Amount");

        destinationAccountTextField.setToolTipText("");

        depositComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deposit", "Withdraw", "Transfer" }));

        executeButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        executeButton.setText("Execute");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout makeTransactionPanelLayout = new javax.swing.GroupLayout(makeTransactionPanel);
        makeTransactionPanel.setLayout(makeTransactionPanelLayout);
        makeTransactionPanelLayout.setHorizontalGroup(
            makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transactionTypeLabel)
                            .addComponent(amountLabel)
                            .addComponent(destinationAccountLabel)
                            .addComponent(sourceAccountLabel))
                        .addGap(18, 18, 18)
                        .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(destinationAccountTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sourceAccountTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(depositComboBox, 0, 485, Short.MAX_VALUE)
                            .addComponent(amountTextField, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(makeTransactionLabel)))
                .addContainerGap())
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(executeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        makeTransactionPanelLayout.setVerticalGroup(
            makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(makeTransactionLabel)
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depositComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transactionTypeLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceAccountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sourceAccountLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationAccountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationAccountLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountLabel))
                .addGap(18, 18, 18)
                .addComponent(executeButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Make Transaction", makeTransactionPanel);

        listUsersLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listUsersLabel.setText("List Users");

        listUserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Fullname", "Age", "Number of Accounts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(listUserTable);

        usersRefreshButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        usersRefreshButton.setText("Refresh");
        usersRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userListPanelLayout = new javax.swing.GroupLayout(userListPanel);
        userListPanel.setLayout(userListPanelLayout);
        userListPanelLayout.setHorizontalGroup(
            userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(listUsersLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(usersRefreshButton)
                        .addGap(88, 88, 88))))
        );
        userListPanelLayout.setVerticalGroup(
            userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userListPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listUsersLabel)
                    .addComponent(usersRefreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("List Users", userListPanel);

        listAccountsLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listAccountsLabel.setText("List Accounts");

        AccountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "User ID", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(AccountsTable);

        accountsRefreshButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        accountsRefreshButton.setText("Refresh");
        accountsRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountsRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listAccountsPanelLayout = new javax.swing.GroupLayout(listAccountsPanel);
        listAccountsPanel.setLayout(listAccountsPanelLayout);
        listAccountsPanelLayout.setHorizontalGroup(
            listAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listAccountsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(listAccountsPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(listAccountsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(accountsRefreshButton)
                .addGap(90, 90, 90))
        );
        listAccountsPanelLayout.setVerticalGroup(
            listAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listAccountsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(listAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listAccountsLabel)
                    .addComponent(accountsRefreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("List Accounts", listAccountsPanel);

        listTransactionsLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listTransactionsLabel.setText("List Transactions");

        transcationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type", "Source Account ID", "Destination Account ID", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transcationsTable);

        transactionsRefreshButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        transactionsRefreshButton.setText("Refresh");
        transactionsRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionsRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout transcationsPanelLayout = new javax.swing.GroupLayout(transcationsPanel);
        transcationsPanel.setLayout(transcationsPanelLayout);
        transcationsPanelLayout.setHorizontalGroup(
            transcationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transcationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(transcationsPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(listTransactionsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(transactionsRefreshButton)
                .addGap(89, 89, 89))
        );
        transcationsPanelLayout.setVerticalGroup(
            transcationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transcationsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(transcationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listTransactionsLabel)
                    .addComponent(transactionsRefreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("List Transactions", transcationsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:

        String id = registerIdTextField.getText();
        String firstname = firstNameTextField.getText();
        String lastname = lastNameTextField.getText();
        String age = ageTextField.getText();

        Response response = UserController.createUser(id, firstname, lastname, age);
        
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
        }

        registerIdTextField.setText("");
        firstNameTextField.setText("");
        lastNameTextField.setText("");
        ageTextField.setText("");
    }//GEN-LAST:event_registerButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        // TODO add your handling code here:
        String userId = createAccountIdTextField.getText();
        String initialBalance = initialBalanceTextField.getText();

        Response response = AccountController.createAccount(userId, initialBalance);

        if (response.getStatus() >= 500) {
        JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
        }

        createAccountIdTextField.setText("");
        initialBalanceTextField.setText("");
            
    }//GEN-LAST:event_createButtonActionPerformed

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        // TODO add your handling code here:
        
        String type = depositComboBox.getItemAt(depositComboBox.getSelectedIndex());
        String destinationAccountId = destinationAccountTextField.getText();
        String sourceAccountId = sourceAccountTextField.getText();
        String amount = amountTextField.getText();
        Response response = null;
        switch (type) {
            case "Deposit": {
                response = DepositController.createDeposit(destinationAccountId, amount);
                break;
            }
            case "Withdraw": {
                response = WithdrawController.createWithdraw(sourceAccountId, amount);
                break;
            }
            case "Transfer": {
                String sourceAccountId = sourceAccountTextField.getText();
                String destinationAccountId = destinationAccountTextField.getText();
                double amount = Double.parseDouble(amountTextField.getText());

                Account sourceAccount = null;
                Account destinationAccount = null;
                for (Account account : this.accounts) {
                    if (account.getId().equals(sourceAccountId)) {
                        sourceAccount = account;
                    }
                }
                for (Account account : this.accounts) {
                    if (account.getId().equals(destinationAccountId)) {
                        destinationAccount = account;
                    }
                }
                if (sourceAccount != null && destinationAccount != null && sourceAccount.withdraw(amount)) {
                    destinationAccount.deposit(amount);

                    this.transactions.add(new Transaction(TransactionType.TRANSFER, sourceAccount, destinationAccount, amount));

                    sourceAccountTextField.setText("");
                    destinationAccountTextField.setText("");
                    amountTextField.setText("");
                }
                break;
            }
            default: {
                sourceAccountTextField.setText("");
                destinationAccountTextField.setText("");
                amountTextField.setText("");
                break;
            }
        }
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
        }

        sourceAccountTextField.setText("");
        destinationAccountTextField.setText("");
        amountTextField.setText("");
    }//GEN-LAST:event_executeButtonActionPerformed

    private void usersRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) listUserTable.getModel();
        model.setRowCount(0);
        
        this.users.sort((obj1, obj2) -> (obj1.getId() - obj2.getId()));
        
        for (User user : this.users) {
            model.addRow(new Object[]{user.getId(), user.getFirstname() + " " + user.getLastname(), user.getAge(), user.getNumAccounts()});
        }
    }//GEN-LAST:event_usersRefreshButtonActionPerformed

    private void accountsRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountsRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) AccountsTable.getModel();
        model.setRowCount(0);
        
        this.accounts.sort((obj1, obj2) -> (obj1.getId().compareTo(obj2.getId())));
        
        for (Account account : this.accounts) {
            model.addRow(new Object[]{account.getId(), account.getOwner().getId(), account.getBalance()});
        }
    }//GEN-LAST:event_accountsRefreshButtonActionPerformed

    private void transactionsRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionsRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) transcationsTable.getModel();
        model.setRowCount(0);
        
        ArrayList<Transaction> transactionsCopy = (ArrayList<Transaction>) this.transactions.clone();
        Collections.reverse(transactionsCopy);
        
        for (Transaction transaction : transactionsCopy) {
            model.addRow(new Object[]{transaction.getType().name(), (transaction.getSourceAccount() != null ? transaction.getSourceAccount().getId() : "None"), (transaction.getDestinationAccount()!= null ? transaction.getDestinationAccount().getId() : "None"), transaction.getAmount()});
        }
    }//GEN-LAST:event_transactionsRefreshButtonActionPerformed

    private void registerIdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerIdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerIdTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AccountsTable;
    private javax.swing.JButton accountsRefreshButton;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField amountTextField;
    private javax.swing.JTextField createAccountIdTextField;
    private javax.swing.JLabel createAccountLabel;
    private javax.swing.JPanel createAccountPanel;
    private javax.swing.JButton createButton;
    private javax.swing.JLabel createIdLabel;
    private javax.swing.JComboBox<String> depositComboBox;
    private javax.swing.JLabel destinationAccountLabel;
    private javax.swing.JTextField destinationAccountTextField;
    private javax.swing.JButton executeButton;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel initialBalanceLabel;
    private javax.swing.JTextField initialBalanceTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel listAccountsLabel;
    private javax.swing.JPanel listAccountsPanel;
    private javax.swing.JLabel listTransactionsLabel;
    private javax.swing.JTable listUserTable;
    private javax.swing.JLabel listUsersLabel;
    private javax.swing.JLabel makeTransactionLabel;
    private javax.swing.JPanel makeTransactionPanel;
    private javax.swing.JLabel registerAgeLabel;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel registerFirstNameLabel;
    private javax.swing.JLabel registerIdLabel;
    private javax.swing.JTextField registerIdTextField;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JLabel registerLastNameLabel;
    private javax.swing.JPanel registerUserPanel;
    private javax.swing.JLabel sourceAccountLabel;
    private javax.swing.JTextField sourceAccountTextField;
    private javax.swing.JLabel transactionTypeLabel;
    private javax.swing.JButton transactionsRefreshButton;
    private javax.swing.JPanel transcationsPanel;
    private javax.swing.JTable transcationsTable;
    private javax.swing.JPanel userListPanel;
    private javax.swing.JButton usersRefreshButton;
    // End of variables declaration//GEN-END:variables
}
